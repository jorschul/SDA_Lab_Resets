{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Content","Footer","Sider","SubMenu","Menu","getRandomBetween","l","r","Math","round","random","Option","Select","timeToShow","Date","toUTCString","hostName","window","location","hostname","App","state","assuranceTableSample","assuranceLoaded","addDevicesLoaded","claimDevicesloaded","provisionDevicesLoaded","intrusionClicked","claimed","provisioned","collapsed","devicesToBeClaimed","selectedApp","claimedDevices","requestBody","devices","name","serialNumber","productId","source","lastContact","workflow","loading","loadingClass","loadingText","responseValue","onCollapse","console","log","_this","setState","callRestAPI","callType","axios","get","then","res","JSON","stringify","replace","provisionDeviceClicked","provisionDevicesRequestBody","setTimeout","reponsePageType","selectedPage","claimDeviceClicked","claimDevicesRequestBody","self","Object","assertThisInitialized","handleIntrusionClick","addWorkflowDeviceClicked","closeResponsePage","handleSelectApp","app","this","map","d","i","Device Name","Health Score","CPU Utilization","Memory Utilization","Fabric Enabled","_this2","react_default","a","createElement","table","columns","title","dataIndex","key","dataSource","Name","Serial Number","deviceNameMapping","Site","Source","State","Last Contacted","Workflow","pagination","row","style","textAlign","es_button","type","onClick","bind","className","locale","emptyText","disabled","includes","render","text","color","fontWeight","es_select","showSearch","width","marginRight","placeholder","onChange","value","concat","rows","cols","toLowerCase","openNotification","size","block","paddingLeft","tag","_this3","layout","minHeight","collapsible","paddingBottom","icon","paddingRight","menu","theme","defaultSelectedKeys","mode","Item","background","padding","col","span","offset","marginTop","margin","getPage","React","Component","desc","args","message","description","duration","notification","open","MEL03-C9200-01","MEL03-C9200-02","MEL03-C9200-03","MEL03-C9300-01","MEL03-C9800-01","MEL03-C9500-01","MEL03-C9500-02","MEL03-IE3300-01","MEL03-ISR4461-01","MEL03-ISR4461-02","Boolean","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56ee87b5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\n//import './index.css';\n//import CartIcon from '../images/CartIcon.png';\n\nimport {\n  Layout,\n  Menu,\n  Icon,\n  Table,\n  Row,\n  Col,\n  Button,\n  notification,\n  Tag\n} from \"antd\";\nimport { Select } from \"antd\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nconst getRandomBetween = (l, r) => Math.round(Math.random() * (r - l) + l);\n\nconst Option = Select.Option;\n\nconst timeToShow = new Date().toUTCString();\n\nconst hostName = window.location.hostname\n\nexport default class App extends React.Component {\n  state = {\n    assuranceTableSample:[],\n    assuranceLoaded: false,\n    addDevicesLoaded: false,\n    claimDevicesloaded: false,\n    provisionDevicesLoaded: false,\n    intrusionClicked: false,\n    claimed: false,\n    provisioned: false,\n    collapsed: false,\n    devicesToBeClaimed: \"\",\n    selectedApp: false,\n    claimedDevices: \"\",\n    requestBody:\"\",\n    devices: [\n      {\n        name: \"MEL03-ISR4461-02\",\n        serialNumber: \"FJC2027DO64\",\n        productId: \"ASR1001-X\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"ISR4461_MEL03\"\n      },\n      {\n        name: \"MEL03-C9200-01\",\n        serialNumber: \"JPG2227013D\",\n        productId: \"C9200\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9200_MEL03\"\n      },\n      {\n        name: \"MEL03-C9200-02\",\n        serialNumber: \"JPG2227013E\",\n        productId: \"C9200\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9200_MEL03\"\n      },\n      {\n        name: \"MEL03-C9200-03\",\n        serialNumber: \"JPG2227013F\",\n        productId: \"C9200\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9200_MEL03\"\n      },\n      {\n        name: \"MEL03-C9300-01\",\n        serialNumber: \"JPG2227013G\",\n        productId: \"C9200\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9200_MEL03\"\n      },\n      {\n        name: \"MEL03-C9800-01\",\n        serialNumber: \"JPG2227013H\",\n        productId: \"C9200\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9200_MEL03\"\n      },\n      {\n        name: \"MEL03-C9500-01\",\n        serialNumber: \"JPG2227015B\",\n        productId: \"C9300-24P\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9300_MEL03\"\n      },\n      {\n        name: \"MEL03-ISR4461-01\",\n        serialNumber: \"FJC2027DO63\",\n        productId: \"C9300-24P\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"ISR4461_MEL03\"\n      },\n      {\n        name: \"MEL03-C9500-02\",\n        serialNumber: \"JPG2227015C\",\n        productId: \"C9300-24P\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9300_MEL03\"\n      },\n      {\n        name: \"MEL03-IE3300-01\",\n        serialNumber: \"IOT2227015C\",\n        productId: \"IE3300-24P\",\n        source: \"Network\",\n        lastContact: \"11/08/2018 05:02:55 UTC\",\n        workflow: \"C9300_MEL03\"\n      }\n    ],\n    loading: false,\n    loadingClass: \"hideClass\",\n    loadingText: \"\",\n    responseValue: \"Loading...\"\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  callRestAPI = callType => {\n    axios\n      .get(`http://`+hostName+`:5000/api/v1/simulation/` + callType)\n      .then(res => {\n        this.setState({ responseValue: JSON.stringify(res).replace('simulation/','').replace('simulation','') });\n      });\n  };\n\n  provisionDeviceClicked = () => {\n    this.setState({\n      loading: true,\n      loadingClass: \"showClass\",\n      loadingText: \"Provision Device in progress..\",\n      requestBody:provisionDevicesRequestBody\n    });\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n        loadingClass: \"hideClass\",\n        loadingText: \"\"\n      });\n      this.setState({ reponsePageType: this.state.selectedPage });\n      this.setState({ selectedPage: \"responsePage\", provisioned: true });\n      //this.unselectAll();\n      this.callRestAPI(\"provision_device\");\n    }, 6000);\n  };\n\n  claimDeviceClicked = () => {\n    this.setState({\n      loading: true,\n      loadingClass: \"showClass\",\n      loadingText: \"Claim Device in progress..\",\n      requestBody:claimDevicesRequestBody\n    });\n    setTimeout(() => {\n      let self = this;\n      self.setState({\n        loading: false,\n        loadingClass: \"hideClass\",\n        loadingText: \"\",\n        claimed: true\n      });\n      //self.setState({claimedDevices:self.state.claimedDevices.concat(self.rowSelection.selectedRowKeys)})\n      self.setState({ reponsePageType: self.state.selectedPage });\n      self.setState({ selectedPage: \"responsePage\" });\n      //self.unselectAll();\n      this.callRestAPI(\"claim_device\");\n    }, 6000);\n  };\n\n  handleIntrusionClick = () => {\n    this.setState({ intrusionClicked: true });\n  };\n\n  addWorkflowDeviceClicked = () => {\n    this.setState({\n      loading: true,\n      loadingClass: \"showClass\",\n      loadingText: \"Add Workflow Device in progress..\",\n      requestBody:''\n    });\n    let self = this;\n    setTimeout(() => {\n      self.setState({\n        loading: false,\n        loadingClass: \"hideClass\",\n        loadingText: \"\"\n      });\n      //self.setState({devicesToBeClaimed:self.state.devicesToBeClaimed.concat(self.rowSelection.selectedRowKeys)})\n      self.setState({ reponsePageType: self.state.selectedPage });\n      self.setState({ selectedPage: \"responsePage\" });\n      //self.unselectAll();\n      this.callRestAPI(\"add_workflow\");\n    }, 6000);\n  };\n\n  closeResponsePage = () => {\n    this.setState({ selectedPage: this.state.reponsePageType });\n    //this.unselectAll();\n  };\n\n  //   rowSelection = {\n  //   onChange: (selectedRowKeys, selectedRows) => {\n  //     this.rowSelection.selectedRowKeys=selectedRowKeys;\n  //    },\n  //   getCheckboxProps: record => ({\n  //    // disabled: record.name === 'Disabled User', // Column configuration not to be checked\n  //     name: record.name,\n  //   }),\n  // };\n\n  // unselectAll=()=>{\n  // this.rowSelection.selectedRowKeys=[];\n  // }\n\n  componentDidMount() {\n    this.setState({assuranceTableSample:this.state.devices.map((d,i) => {\n      return {\n        \"Device Name\": d.name,\n        \"Health Score\": i===1?2:getRandomBetween(8, 10),\n        \"CPU Utilization\": i===1?90:getRandomBetween(10, 40),\n        \"Memory Utilization\": i===1?82:getRandomBetween(10, 60),\n        \"Fabric Enabled\": \"Yes\"\n      }\n    })\n  })\n  }\n\n  handleSelectApp = app => {\n    this.setState({ selectedApp: app });\n  };\n\n  getPage() {\n    switch (this.state.selectedPage) {\n      case \"6\": {\n        setTimeout(() => this.setState({ provisionDevicesLoaded: true }), 1000);\n        return (\n          <div>\n            <Table\n              loading={!this.state.provisionDevicesLoaded}\n              columns={[\n                \"Name\",\n                \"Serial Number\",\n                \"Site\",\n                \"Source\",\n                \"State\",\n                \"Last Contacted\",\n                \"Workflow\"\n              ].map(d => {\n                return { title: d, dataIndex: d, key: d };\n              })}\n              dataSource={\n                this.state.provisionDevicesLoaded\n                  ? this.state.devices.map((d, i) => {\n                      return {\n                        Name: d.name,\n                        \"Serial Number\": deviceNameMapping[d.name],\n                        \"Site\":\"Global/Australia/Victoria/Melbourne/MEL03\",\n                        Source: d.source,\n                        State: this.state.provisioned\n                          ? \"Provisioned\"\n                          : \"Claimed\",\n                        \"Last Contacted\": timeToShow,\n                        Workflow: d.workflow\n                      };\n                    })\n                  : []\n              }\n              pagination={false}\n            />\n            <br />\n            <Row style={{ textAlign: \"right\" }}>\n              <Button\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.provisionDeviceClicked.bind(this)}\n              >\n                Provision Devices\n              </Button>\n            </Row>\n            <Row style={{ textAlign: \"right\" }}>\n              <div className={this.state.loadingClass}>\n                {this.state.loadingText}\n              </div>\n            </Row>\n          </div>\n        );\n      }\n      case \"5\": {\n        setTimeout(() => this.setState({ claimDevicesloaded: true }), 1000);\n        return (\n          <div>\n            <Table\n              loading={!this.state.claimDevicesloaded}\n              locale={{ emptyText: \"No devices left to claim\" }}\n              columns={[\n                \"Name\",\n                \"Serial Number\",\n                \"Source\",\n                \"State\",\n                \"Last Contacted\"\n              ].map(d => {\n                return { title: d, dataIndex: d, key: d };\n              })}\n              dataSource={\n                this.state.claimDevicesloaded && !this.state.claimed\n                  ? this.state.devices.map((d, i) => {\n                      return {\n                        Name: deviceNameMapping[d.name],\n                        \"Serial Number\": deviceNameMapping[d.name],\n                        Source: d.source,\n                        State: \"Unclaimed\",\n                        \"Last Contacted\": timeToShow,\n                        Workflow: d.workflow\n                      };\n                    })\n                  : []\n              }\n              pagination={false}\n            />\n            <br />\n            <Row style={{ textAlign: \"right\" }}>\n              <Button\n                disabled={this.state.claimed}\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.claimDeviceClicked.bind(this)}\n              >\n                Claim Devices\n              </Button>\n            </Row>\n            <Row style={{ textAlign: \"right\" }}>\n              <div className={this.state.loadingClass}>\n                {this.state.loadingText}\n              </div>\n            </Row>\n          </div>\n        );\n      }\n      case \"4\": {\n        setTimeout(() => this.setState({ addDevicesLoaded: true }), 1000);\n        return (\n          <div>\n            <Table\n              loading={!this.state.addDevicesLoaded}\n              columns={[\n                \"Name\",\n                \"Serial Number\",\n                \"Source\",\n                \"State\",\n                \"Last Contacted\",\n                \"Workflow\"\n              ].map(d => {\n                return { title: d, dataIndex: d, key: d };\n              })}\n              dataSource={\n                this.state.addDevicesLoaded\n                  ? this.state.devices.map((d, i) => {\n                      if (this.state.devicesToBeClaimed.includes(i)) {\n                        return {\n                          Name: deviceNameMapping[d.name],\n                          \"Serial Number\": deviceNameMapping[d.name],\n                          Source: d.source,\n                          State: \"Unclaimed\",\n                          \"Last Contacted\": timeToShow,\n                          Workflow: d.workflow\n                        };\n                      } else {\n                        return {\n                          Name: deviceNameMapping[d.name],\n                          \"Serial Number\": deviceNameMapping[d.name],\n                          Source: d.source,\n                          State: \"Unclaimed\",\n                          \"Last Contacted\": \"Not Contacted\",\n                          Workflow: \"Not Assigned\"\n                        };\n                      }\n                    })\n                  : []\n              }\n              pagination={false}\n            />\n            <br />\n            <Row style={{ textAlign: \"right\" }}>\n              <Button\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.addWorkflowDeviceClicked.bind(this)}\n              >\n                Add Devices\n              </Button>\n            </Row>\n            <Row style={{ textAlign: \"right\" }}>\n              <div className={this.state.loadingClass}>\n                {this.state.loadingText}\n              </div>\n            </Row>\n          </div>\n        );\n      }\n      case \"7\": {\n        setTimeout(() => this.setState({ assuranceLoaded: true }), 1000);\n        return (\n          <div>\n            <Table\n              loading={!this.state.assuranceLoaded}\n              columns={[\n                \"Device Name\",                \n                \"Health Score\",\n                \"CPU Utilization\",\n                \"Memory Utilization\",\n                \"Fabric Enabled\"\n              ].map(d => {                \n                if (d === \"Health Score\")\n                  return {\n                    title: d,\n                    dataIndex: d,\n                    key: d,\n                    render: text => (\n                      <span style={{ color: text===2?\"red\":\"green\", fontWeight: 600 }}>\n                        {text}\n                      </span>\n                    )\n                  };\n                else return { title: d, dataIndex: d, key: d };\n              })}\n              dataSource={\n                this.state.assuranceLoaded ? this.state.assuranceTableSample : []\n              }\n            />\n          </div>\n        );\n      }\n      case \"8\": {\n        return (\n          <div>\n            <Select\n              showSearch\n              style={{ width: 200, marginRight: \"20px\" }}\n              placeholder=\"Select an Application\"\n              onChange={this.handleSelectApp}\n            >\n              {[\n                \"Office365\",\n                \"Webex\",\n                \"SalesForce\",\n                \"Box\",\n                \"Intuit\",\n                \"Concur\",\n                \"Oracle\"\n              ].map(d => (\n                <Option key={d} value={d}>\n                  {d}\n                </Option>\n              ))}\n            </Select>\n            {this.state.selectedApp ? (\n              <div>\n                <br />\n                <br />\n                <h2>{`Add ${this.state.selectedApp} Application`}</h2>\n                <br />\n                <br />\n                <textarea\n                  disabled\n                  rows=\"10\"\n                  cols=\"90\"\n                  value={`POST https://sdwan-sj06.cisco.com:8443/dataservice/template/cloudx/manage/apps\\nBODY:\\n{\"appList\":[{\"appType\":\"${this.state.selectedApp.toLowerCase()}\",\"longName\":\"${\n                    this.state.selectedApp\n                  }\",\"appVpnList\":\"10\"}]}`}\n                />\n                <br />\n                <br />\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    this.setState({ loading: true });\n                    axios\n                      .get(\n                        \"http://\"+hostName+\":5000/api/v1/simulation/cloud_onramp_saas\"\n                      )\n                      .then(res => {\n                        this.setState({\n                          loading: false,\n                          responseValue: JSON.stringify(res),\n                          selectedPage: \"responsePage\"\n                        });\n                      });\n                  }}\n                >\n                  Add\n                </Button>\n              </div>\n            ) : null}\n          </div>\n        );\n      }\n      case \"11\": {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                this.setState({ loading: true, claimed: false });\n                axios\n                  .get(\n                    \" http://\"+hostName+\":5000/api/v1/simulation/resetSDWan\"\n                  )\n                  .then(res => {\n                    this.setState({ loading: false });\n                    openNotification(\"Success\", JSON.stringify(res));\n                    this.setState({ loading: false });\n                  });\n              }}\n            >\n              Reset SD-WAN\n            </Button>\n            <br />\n            <br />\n            {/*<Button\n              type=\"primary\"\n              onClick={() => {\n                this.setState({ loading: true, claimed: false });\n                axios\n                  .get(\n                    \"http://\"+hostName+\":5000/api/v1/simulation/resetSDAccess\"\n                  )\n                  .then(res => {\n                    this.setState({ loading: false });\n                    openNotification(\"Success\", JSON.stringify(res));\n                    this.setState({ loading: false });\n                  });\n              }}\n            >\n              Reset SD-Access\n            </Button>*/}\n          </div>\n        );\n      }\n      case \"9\": {\n        return (\n          <div style={{ width: \"200px\" }}>\n            <Button size=\"large\" block type=\"primary\">\n              FireWall\n            </Button>\n            <br />\n            <br />\n            <Button\n              size=\"large\"\n              block\n              type=\"primary\"\n              onClick={this.handleIntrusionClick}\n            >\n              Intrusion Prevention\n            </Button>\n            <br />\n            <br />\n            <Button size=\"large\" block type=\"primary\">\n              URL Filtering\n            </Button>\n            <br />\n            <br />\n            <Button size=\"large\" block type=\"primary\">\n              DNS Security\n            </Button>\n            <br />\n            <br />\n            {this.state.intrusionClicked ? (\n              <div>\n                <br />\n                <br />\n                <textarea disabled rows=\"10\" cols=\"90\">\n                  {`PUT https://sdwan-sj06.cisco.com/dataservice/template/policy/security/1ca11fbe-cfd5-4f2a-8e26-10e4ca966acf\\n\\nBODY\\n{\"policyDescription\":\"Greatwall Policy\",\"policyType\":\"feature\",\"policyName\":\"Greatwall_Policy\",\"policyUseCase\":\"custom\",\"policyDefinition\":{\"assembly\":[{\"definitionId\":\"6d372578-a02d-4b73-83db-78f4e4192fc6\",\"type\":\"urlFiltering\"},{\"definitionId\":\"26d628ef-4696-448d-8a44-46bbc15ccbe5\",\"type\":\"DNSSecurity\"},{\"definitionId\":\"7452b71a-2208-4605-9f66-2e784de5695d\",\"type\":\"zoneBasedFW\"},{\"definitionId\":\"d7018da7-7a59-4611-9287-6f3716a3a447\",\"type\":\"intrusionPrevention\"}],\"settings\":{\"failureMode\":\"close\",\"zoneToNozoneInternet\":\"deny\"}}}\n \n`}\n                </textarea>\n                <br />\n                <br />\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    this.setState({ loading: true });\n                    axios\n                      .get(\n                        \"http://\"+hostName+\":5000/api/v1/simulation/great_wall_policy\"\n                      )\n                      .then(res => {\n                        this.setState({\n                          loading: false,\n                          responseValue: JSON.stringify(res),\n                          selectedPage: \"responsePage\"\n                        });\n                      });\n                  }}\n                >\n                  Add\n                </Button>\n              </div>\n            ) : null}\n          </div>\n        );\n      }\n      case \"responsePage\": {\n        return (\n          <div>\n            <div>\n              <div className=\"label\">Advanced:</div>\n              <div className=\"responseText\" style={{ paddingLeft: 50 }}>\n                <textarea\n                  rows=\"10\"\n                  cols=\"80\"\n                  value={this.state.requestBody!==''?this.state.requestBody:this.state.responseValue}\n                />\n              </div>\n            </div>\n            <div>\n              <div className=\"label\">Status</div>\n              <div className=\"responseText\" style={{ paddingLeft: 50 }}>\n                <Tag color=\"green\">\n                  <h2 style={{ color: \"green\" }}>Status Code:201 Success</h2>\n                </Tag>\n              </div>\n            </div>\n          </div>\n        );\n      }\n      default: {\n        return <h3>Choose an option from the menu to get started.</h3>;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider\n          collapsible\n          collapsed={this.state.collapsed}\n          onCollapse={this.onCollapse}\n          width={250}\n        >\n          <div className=\"logo\" style={{}}>\n            <h2 style={{ color: \"#fff\", paddingBottom: \"15px\" }}>\n              <Icon type=\"global\" style={{ paddingRight: \"10px\" }} />\n              ACME Corporation\n            </h2>\n          </div>\n          <Menu\n            theme=\"dark\"\n            defaultSelectedKeys={[\"1\"]}\n            mode=\"inline\"\n            onClick={i => {              \n              this.setState({ selectedPage: i.key });\n            }}\n          >\n            {/*<SubMenu\n              key=\"sub1\"\n              title={\n                <span>\n                  <Icon type=\"api\" />\n                  <span>DNAC Configuration</span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"3\">Upgrade Device Image</Menu.Item>\n              <Menu.Item key=\"4\">Add Device Workflow</Menu.Item>\n              <Menu.Item key=\"5\">Claim Device Workflow</Menu.Item>\n              <Menu.Item key=\"6\">Provision Device to Site</Menu.Item>\n              <Menu.Item key=\"7\">Device Assurance</Menu.Item>\n            </SubMenu>*/}\n            <SubMenu\n              key=\"sub2\"\n              title={\n                <span>\n                  <Icon type=\"setting\" />\n                  <span>vManage Configuration</span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"8\">Add Cloud onRamp for SaaS</Menu.Item>\n              <Menu.Item key=\"9\">Add Security Policy</Menu.Item>\n              <Menu.Item key=\"10\">Site vAnalytics</Menu.Item>\n            </SubMenu>\n            <SubMenu\n              key=\"sub3\"\n              title={\n                <span>\n                  <Icon type=\"fire\" />\n                  <span>APIC Configuration</span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"12\">Add VRF</Menu.Item>\n              <Menu.Item key=\"13\">Add Contract</Menu.Item>\n              <Menu.Item key=\"14\">Add L3 Outside Network</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"11\">\n              <Icon type=\"tool\" />\n              <span>Settings</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header\n            style={{ background: \"#fff\", padding: 0, textAlign: \"center\" }}\n          >\n            <Row>\n              <Col span={12} offset={4}>\n                <h2 style={{ paddingLeft: \"1em\" }}>\n                  Network and Security Portal\n                </h2>\n              </Col>\n              <Col span={8}>\n                <div\n                  style={{\n                    marginTop: \"-1em\",\n                    textAlign: \"right\",\n                    paddingRight: \"0.5em\"\n                  }}\n                >\n                  <div>Viewing Smart Account:ACME Corp</div>\n                  <div style={{ marginTop: \"-3em\" }}>\n                    {\" \"}\n                    Site: MEL03 #100046, Logged in as: vimoreno\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Header>\n          <Content style={{ margin: \"0 16px\", padding: \"3em\" }}>\n            <div style={{ padding: 24, background: \"#fff\", minHeight: 360 }}>\n              {this.getPage()}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>            \n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst openNotification = (title, desc) => {\n  const args = {\n    message: title,\n    description: desc,\n    duration: 3\n  };\n  notification.open(args);\n};\n\nconst claimDevicesRequestBody = `POST https://dnac-sj06.cisco.com/dna/intent/api/v1/onboarding/pnp-device/site-claim\nBODY\n{  \"deviceId\": \"MEL03-ISR4461-02\",  \"siteId\": ”MEL03\",  \"type\": ”BorderRouter\"}\n{  \"deviceId\": \"MEL03-C9200-01\",  \"siteId\": ”MEL03\",  \"type\": ”Access\"}\n{  \"deviceId\": \"MEL03-C9200-02\",  \"siteId\": ”MEL03\",  \"type\": ”Access\"}\n{  \"deviceId\": \"MEL03-C9200-03\",  \"siteId\": ”MEL03\",  \"type\": ”Access\"}\n{  \"deviceId\": \"MEL03-C9300-01\",  \"siteId\": ”MEL03\",  \"type\": ”Access\"}\n{  \"deviceId\": \"MEL03-C9800-05\",  \"siteId\": ”MEL03\",  \"type\": ”Access\"}\n{  \"deviceId\": \"MEL03-C9500-01\",  \"siteId\": ”MEL03\",  \"type\": ”Core\"}\n{  \"deviceId\": \"MEL03-ISR4461-01\",  \"siteId\": ”MEL03\",  \"type\": ”BorderRouter\"}\n{  \"deviceId\": \"MEL03-C9500-01\",  \"siteId\": ”MEL03\",  \"type\": ”Core\"}\n{  \"deviceId\": \"MEL03-IE3300-01\",  \"siteId\": ”MEL03\",  \"type\": ”Access\"}\n`\n\nconst provisionDevicesRequestBody = `POST https://dnac-sj06.cisco.com /dna/intent/api/v1/business/sda/border-device/\nBODY\n[  {    \"deviceManagementIpAddress\": \"10.0.255.34\",    ”siteHierarchy”: Australia,Victoria,Melbourne,MEL03”,\"externalDomainRoutingProtocolName\": ”BGP\", \"internalAutonomouSystemNumber\":”BGPUplink”, \"internalAutonomouSystemNumber\": ”65000”,\"borderSessionType\": ”Anywhere\",   \"connectedToInternet\": true,    \"externalConnectivitySettings\": [      {        \"interfaceName\": ”Interface TenGigabitEthernet1/0/12\",        \"externalAutonomouSystemNumber\": ”65001\",        \"l3Handoff\": [          {            \"virtualNetwork\": {              \"virtualNetworkName\": ”Campus\"            }          }        ]      }    ]  }]\n`\n\nconst deviceNameMapping = {\n  'MEL03-C9200-01':  'JPG2227023C',\n  'MEL03-C9200-02':  'JPG2227023D',\n  'MEL03-C9200-03':  'JPG2227023E',\n  'MEL03-C9300-01':  'JPG2227026A',\n  'MEL03-C9800-01':  'FCH2034V5G2',\n  'MEL03-C9500-01':  'FXS2131Q5ZA',\n  'MEL03-C9500-02':  'FXS2131Q5ZB',\n  'MEL03-IE3300-01': 'FDO2205U1BJ',\n  'MEL03-ISR4461-01':  'FJC2027D162',\n  'MEL03-ISR4461-02': 'FJC2027D163'\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}